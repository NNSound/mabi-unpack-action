name: learn-github-actions
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
jobs:
  unpack-tool:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - uses: actions/checkout@v2
        with:
          # token: "${{ env.MY_ENV_VAR }}"
          repository: regomne/mabi-pack
          path: my-tools

      - uses: actions-rs/toolchain@v1
        with:
          # token: "${{ env.MY_ENV_VAR }}"
          toolchain: stable

      - uses: actions-rs/cargo@v1
        with:
          # token: "${{ env.MY_ENV_VAR }}"
          # working-directory: ./my-tools
          command: build
          args: --manifest-path ./my-tools/Cargo.toml --release 

      - name: export tool command
        # working-directory: ./my-tools
        run: echo "$GITHUB_WORKSPACE/my-tools/target/release" >> $GITHUB_PATH

      - name: test tool
        # working-directory: ./my-tools
        run: mabi-pack --version

      - name: unpack xml
        # working-directory: ./my-tools
        run: |
          mabi-pack extract -i $GITHUB_WORKSPACE/341_to_342.pack -o $GITHUB_WORKSPACE/342 --filter "itemdb.xml"
          mabi-pack extract -i $GITHUB_WORKSPACE/341_to_342.pack -o $GITHUB_WORKSPACE/342 --filter "race.xml"
          mabi-pack extract -i $GITHUB_WORKSPACE/341_to_342.pack -o $GITHUB_WORKSPACE/342 --filter "production.xml"
          mabi-pack extract -i $GITHUB_WORKSPACE/341_to_342.pack -o $GITHUB_WORKSPACE/342 --filter "skillinfo.xml"
          mabi-pack extract -i $GITHUB_WORKSPACE/341_to_342.pack -o $GITHUB_WORKSPACE/342 --filter "propdb.xml"

      - uses: papeloto/action-zip@v1
        with:
          files: $GITHUB_WORKSPACE/342/
          recursive: false
          dest: 342.zip

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: true

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: 342.zip
          asset_name: 342.zip
          asset_content_type: application/zip
